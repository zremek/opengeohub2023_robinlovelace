---
# Slide format:
format: revealjs 
title: Tidy geographic data
subtitle: "with sf, dplyr, ggplot2, geos and friends"
bibliography: references.bib
---

::: notes
Intro slide
:::

# Introduction

## Session overview

![](images/paste-1.png)

Source: [pretalx.earthmonitor.org/opengeohub-summer-school-2023/schedule/v/0.7/](https://pretalx.earthmonitor.org/opengeohub-summer-school-2023/schedule/v/0.7/)

::: notes
Parallel to the Python session.
:::

## System dependencies

![](images/paste-2.png)

Source: @pebesma2018

::: notes
System dependencies.
:::

## System dependencies: code

-   `sf` startup message:

```{r}
#| echo: true
sf::sf_extSoftVersion()
```

-   On Linux `sf` uses system installations of GDAL, GEOS and PROJ.4:

```{bash}
#| echo: true
gdalinfo --version
which gdal-config
```

-   On Windows, `sf` ships with binary versions installed

## Development environments {.smaller}

::: columns
::: {.column width="50%"}
### RStudio

-   Pro: works out of the box
-   Pro: Great R autocomplete
-   Pro: Features for data science + R package development
-   Con: A bit R specific

### VS Code

-   Pro: Works with many languages
-   Pro: Unbeatable ecosystem of extensions
-   Pro: Advanced features such as copilot + works in Codespaces
-   Con: A bit fiddly to set up, rough edges when using R
:::

::: {.column width="50%"}
![](images/paste-4.png)

![](images/paste-3.png)
:::
:::

## RStudio

![](images/paste-4.png)

## VS Code

![](images/paste-3.png)

# Which IDE to you use? {.incremental}

::: columns
::: {.column width="50%"}
<iframe src="https://fosstodon.org/@robinlovelace/110920501943601698/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width="400" allowfullscreen="allowfullscreen">

</iframe>

```{=html}
<script src="https://fosstodon.org/embed.js" async="async"></script>
```
:::

::: column
::: incremental
-   ![](images/paste-7.png)
:::
:::
:::

## Results

::: columns
::: {.column width="50%"}
-   On Twitter:

![](images/paste-8.png)
:::

::: column
::: incremental
-   On Mastodon:

-   ![](images/paste-9.png)
:::
:::
:::

## On Mattermost

![](images/paste-10.png)

# Part 1: Sections 2 and 3

## Key features of `sf`

![](images/paste-5.png)

Source: @lovelace2019

## `sf` functions

![](images/paste-6.png)

Source: @pebesma2018

## Practical (\~13:30-14:30)

Work through the code in Section 2 and 3 at [ogh23.robinlovelace.net/tidy](https://ogh23.robinlovelace.net/tidy) and answer the questions at your own pace.

```{r}
#| message: false
#| warning: false
# Install remotes if not already installed
if (!requireNamespace("remotes")) {
    install.packages("remotes")
}

```

```{r}
# Some of the packages we'll use
pkgs = c(
    "sf",
    "tidyverse",
    "geos",
    "spData"
)
```

```{r}
#| eval: false
#| echo: true
remotes::install_github("robinlovelace/opengeohub2023")
```

```{r}
#| echo: true
#| message: false
#| warning: false
sapply(pkgs, require, character.only = TRUE)
```

# Part 2: Sections 4 to 7

## geos

![](images/paste-13.png)

## tidyverse alternatives

![](images/paste-12.png)

## Comparing R with Python

Inspiration: Working with [Spatial Data in Python](https://geobgu.xyz/presentations/p_2023_ogh/) materials

![](images/paste-14.png)

## Vector data in R/Python

Aim: cross-compare approaches

Source: [Python version](https://geobgu.xyz/presentations/p_2023_ogh/01-vector.html#plotting-1) and [R version](https://ogh23.robinlovelace.net/tidy#worked-example-data-from-poznan)

::: {layout-ncol="2"}
![](images/paste-15.png)

![](images/paste-16.png)
:::

# References
